{
  "version": 3,
  "file": "client.js",
  "sourceRoot": "../../..",
  "sources": [
    "examples/http/client/client.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nclass App\n\n    constructor: (@$) ->\n        @httpApiUrl = '/api'\n\n        app = @\n        @api = new Reqs(\n            events:\n                pong: (t1, time) ->\n                    t2 = Date.now()-time\n                    console.log \"Event: 'Pong'. ping #{t1} + #{t2} = #{t1 + t2}\"\n            methods:\n                [\n                    cbPing: ->\n                        [\n                            Date.now()\n                            (t1, time) ->\n                                t2 = Date.now()-time\n                                console.log \"Ping with callback result: ping #{t1} + #{t2} = #{t1 + t2}\"\n                        ]\n                    syncPing: -> [ Date.now() ] # Return array with arguments for method.\n                    asyncPing:\n                        mode: 'async'\n                        method:  -> [ Date.now() ] # Return array with arguments for method (arguments array for method). Returns promise.\n                        # Optional function for promise.then() method\n                        then: (result) ->\n                            t1 = result[0]\n                            time = result[1]\n                            t2 = Date.now()-time\n                            console.log \"asyncPing result: #{t1} + #{t2} = #{t1 + t2}\"\n                        # Optional function for promise.catch() method\n                        catch: (err) ->\n                            console.error 'asyncPing error:', err\n                    # Example use:\n                    # app.api.methods.asyncPing()\n                    #   .then(function(result) {\n                    #       var t1 = result[0], time = result[1], t2 = Date.now()-time;\n                    #       console.log(`asyncPing result: ${t1} + ${t2} = ${t1 + t2}`);\n                    #   }).catch(function(err) { console.error('asyncPing error:', err) })\n\n                    history: ->\n                        [\n                            (channels) ->\n                                app.setHistory channels\n                        ]\n                    'message'\n                    'createChannel'\n                ]\n            send: (data) -> # Function for sending data\n                console.log '==> Request:', data\n                app.apiPost data\n                return\n\n            session:\n                arguments: ['ws']\n            # coder:\n            #     name: 'Coder'\n            #     arguments: ['example key']\n            key: 'example key'\n            mode: 'sync'    # Methods call mode for all methods whithout async/sync flag\n        )\n\n    apiPost: (data) ->\n        $.ajax(\n            url: @httpApiUrl\n            type: 'POST'\n            data: data\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'text'\n            success: (result) =>\n                console.log '<== Response:', result\n                if result\n                    r = @api.parse result\n                else\n                    console.error 'Post response is undefined'\n        )\n\n    sendAsyncPing: ->\n        APP.api.methods.asyncPing().then( (result) ->\n            t1 = result[0]\n            time = result[1]\n            t2 = Date.now()-time\n            console.log \"asyncPing result: #{t1} + #{t2} = #{t1 + t2}\"\n        ).catch( (err) ->\n            console.error 'asyncPing error:', err\n        )\n\n$ -> window.APP = new App\n"
  ]
}