{
  "version": 3,
  "file": "server.js",
  "sourceRoot": "../../..",
  "sources": [
    "examples/http/server/server.coffee"
  ],
  "names": [],
  "mappings": ";AAAA,IAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAAA;;AAAA,OAAA,GAAU,OAAA,CAAQ,SAAR;;AACV,EAAA,GAAK,OAAA,CAAQ,kBAAR;;AACL,IAAA,GAAO,OAAA,CAAQ,6BAAR;;AAEP,QAAA,GAAW;;AACX,IAAA,GAAO;;AAED,SAAN,MAAA,OAAA;EACI,WAAa,CAAA,CAAA;AACjB,QAAA;IAAQ,GAAA,GAAM;IACN,IAAC,CAAA,GAAD,GAAO,IAAI,IAAJ,CACH;MAAA,MAAA,EACI;QAAA,MAAA,EAAQ,QAAA,CAAC,IAAD,EAAO,EAAP,CAAA;AACxB,cAAA;UAAoB,GAAA,GAAM,IAAI,CAAC,GAAL,CAAA,EAA1B;;iBAEoB,EAAA,CAAG,GAAA,GAAI,IAAP,EAAa,GAAb;QAHI,CAAR;QAIA,QAAA,EAAU,QAAA,CAAC,IAAD,CAAA;AAC1B,cAAA;UAAoB,GAAA,GAAM,IAAI,CAAC,GAAL,CAAA,EAA1B;;iBAEoB,IAAC,CAAA,OAAO,CAAC,IAAT,CAAc,GAAA,GAAI,IAAlB,EAAwB,GAAxB;QAHM,CAJV;QAQA,SAAA,EAAW,QAAA,CAAC,IAAD,CAAA;AAC3B,cAAA;UAAoB,GAAA,GAAM,IAAI,CAAC,GAAL,CAAA,EAA1B;;AAEoB,iBAAO,CAAC,GAAA,GAAI,IAAL,EAAW,GAAX;QAHA;MARX,CADJ;MAaA,OAAA,EAAS,CAAC,MAAD,CAbT;MAeA,IAAA,EAAM,QAAA,CAAC,IAAD,CAAA;AAAU,eAAO;MAAjB,CAfN;MAgBA,KAAA,EAAO,QAAA,CAAC,OAAD,EAAU,IAAV,CAAA;eAAmB,IAAC,CAAA,SAAD,CAAW,OAAX,EAAoB,IAApB;MAAnB,CAhBP;MAiBA,OAAA,EACI;QAAA,SAAA,EAAW;MAAX,CAlBJ;;;;MAsBA,GAAA,EAAK,aAtBL;MAuBA,IAAA,EAAM,MAvBN;IAAA,CADG;IA2BP,IAAC,CAAA,GAAD,GAAO,OAAA,CAAA;IACP,IAAC,CAAA,GAAG,CAAC,GAAL,CAAS,OAAO,CAAC,MAAR,CAAe,yBAAf,CAAT;IACA,IAAC,CAAA,GAAG,CAAC,GAAL,CAAS,mBAAT,EAA8B,OAAO,CAAC,MAAR,CAAe,oBAAf,CAA9B;IACA,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,MAAV,EAAkB,QAAA,CAAC,GAAD,EAAM,GAAN,CAAA;AAC1B,UAAA;MAAY,IAAA,GAAO;MACP,GAAG,CAAC,WAAJ,CAAgB,MAAhB;MACA,GAAG,CAAC,EAAJ,CAAO,MAAP,EAAe,QAAA,CAAC,KAAD,CAAA;eAAW,IAAA,IAAQ;MAAnB,CAAf;aACA,GAAG,CAAC,EAAJ,CAAO,KAAP,EAAc,QAAA,CAAA,CAAA;AAC1B,YAAA,MAAA,EAAA;QAAgB,OAAA,GAAU,GAAG,CAAC,GAAG,CAAC,GAAR,CAAY,GAAZ;QACV,OAAO,CAAC,GAAR,CAAY,uBAAZ,EAAqC,IAArC;QACA,MAAA,GAAS,OAAO,CAAC,KAAR,CAAc,IAAd;QACT,IAAG,CAAI,MAAP;UACI,MAAA,GAAS,GADb;;QAEA,OAAO,CAAC,GAAR,CAAY,uBAAZ,EAAqC,MAArC;eACA,GAAG,CAAC,GAAJ,CAAQ,MAAR;MAPU,CAAd;IAJc,CAAlB;IAaA,GAAG,CAAC,GAAG,CAAC,MAAR,CACI,QADJ,EAEI,QAAA,CAAA,CAAA;aACI,OAAO,CAAC,GAAR,CAAY,CAAA,gDAAA,CAAA,CAAmD,QAAnD,CAAA,CAAZ;IADJ,CAFJ;EA7CS;;AADjB;;AAoDA,MAAM,CAAC,GAAP,GAAa,IAAI,MAAJ,CAAA",
  "sourcesContent": [
    "express = require 'express'\nws = require 'nodejs-websocket'\nReqs = require '../../../dist/node/index.js'\n\nhttpPort = 3000\nhost = 'localhost'\n\nclass Server\n    constructor: ->\n        srv = @\n        @api = new Reqs(\n            events:\n                cbPing: (time, cb) ->\n                    now = Date.now()\n                    # throw new Error 'cbPing example error'\n                    cb now-time, now\n                syncPing: (time) ->\n                    now = Date.now()\n                    # throw new Error 'syncPing example error'\n                    @methods.pong now-time, now\n                asyncPing: (time) ->\n                    now = Date.now()\n                    # throw new Error 'asyncPing example error'\n                    return [now-time, now]\n            methods: ['pong']\n\n            send: (data) -> return data\n            error: (message, code) -> @sendError message, code\n            session:\n                arguments: 'res'\n            # coder:\n            #     name: 'Coder'\n            #     arguments: ['example key']\n            key: 'example key'\n            mode: 'sync' # By default all methods are sync\n        )\n\n        @app = express()\n        @app.use express.static './examples/http/client/'\n        @app.use '/dist/web/reqs.js', express.static './dist/web/reqs.js'\n        @app.post('/api', (req, res) ->\n            data = ''\n            req.setEncoding 'utf8'\n            req.on 'data', (chunk) -> data += chunk;\n            req.on 'end', ->\n                session = srv.api.new res\n                console.log '<== Incoming request:', data\n                result = session.parse data\n                if not result\n                    result = ''\n                console.log '==> Sending response:', result\n                res.end result\n        )\n        srv.app.listen(\n            httpPort\n            ->\n                console.log \"Example Http server listening: http://localhost:#{httpPort}\"\n        )\n\nglobal.SRV = new Server\n"
  ]
}