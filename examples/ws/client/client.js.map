{
  "version": 3,
  "file": "client.js",
  "sourceRoot": "../../..",
  "sources": [
    "examples/ws/client/client.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class Server\n\n    constructor: ->\n\n    init: (app) ->\n        @channels = channels =\n            general:\n                history: [\n                    author: 'Welcome'\n                    message: 'Welcome to #general channel'\n                ]\n\n        @api = new Reqs(\n            events:\n                syncPing: (time) ->\n                    now = Date.now()\n                    @methods.pong now-time, now\n                asyncPing: (time) ->\n                    now = Date.now()\n                    # throw new Error 'Some error'\n                    return [now-time, now]\n                message: (channel, author, message) ->\n                    c = channels[channel]\n                    if c\n                        c.history.push(\n                            author: author\n                            message: message\n                        )\n                        @methods.message channel, author, message\n                createChannel: (channel) ->\n                    c = channels[channel]\n                    if c\n                        @sendError 'Channel already exists', 422, 'test id'\n                    else\n                        history = [\n                            author: 'Welcome'\n                            message: \"Welcome to ##{channel} channel\"\n                        ]\n                        channels[channel] = { history }\n                        @methods.channelCreated channel, history\n                history: (cb) ->\n                    if cb\n                        cb channels\n                channelHistory: (channel, cb) ->\n                    c = channels[channel]\n                    if c and cb\n                        cb c.history\n            methods: ['pong', 'message', 'channelCreated']\n            send: (data) ->\n                console.log '<== RECEIVE local:', data\n                app.api.parse data\n                return\n\n            # coder:\n            #     name: 'Coder'\n            #     arguments: ['example key']\n            key: 'example key'\n            mode: 'sync' # By default all methods are sync\n        )\n\n\nclass App\n\n    constructor: (@$) ->\n        @server = 'local'\n        @channels = {}\n\n        @$.send.click (e) =>\n            msg = @$.textbox.val()\n            if msg.length is 0\n                return\n            @api.methods.message @selectedChannel, @$.nickname.val(), msg\n            @$.textbox.val ''\n\n        @$.createChannel.click (e) =>\n            name = @$.channelName.val()\n            if name.length is 0\n                return\n            @api.methods.createChannel name\n            @$.channelName.val ''\n\n        @$.server.change (e) =>\n            @server = @$.server.val()\n            if @server is 'ws'\n                @wsConnect()\n            else\n                @connect()\n\n    init: (srv) ->\n        app = @\n        @api = new Reqs(\n            events:\n                pong: (t1, time) ->\n                    t2 = Date.now()-time\n                    console.log \"Event: 'Pong'. Ping #{t1} + #{t2} = #{t1 + t2}\"\n                message: (channel, author, msg) =>\n                    # console.log \"New message: <##{channel} [#{author}]: #{msg}>\"\n                    app.message channel, author, msg\n                channelCreated: (channel, history) ->\n                    app.addChannel channel, history\n            methods:\n                [\n                    cbPing: ->\n                        [\n                            Date.now()\n                            (t1, time) ->\n                                t2 = Date.now()-time\n                                console.log \"Ping with callback result: ping #{t1} + #{t2} = #{t1 + t2}\"\n                        ]\n                    syncPing:\n                        method: -> [ Date.now() ] # Return array with arguments for method. Return result of 'send' function\n                    asyncPing:\n                        mode: 'async'\n                        method: -> [ Date.now() ] # Return array with arguments for method. Return promise.\n                        # Optional function for promise.then() method\n                        then: (result) ->\n                            t1 = result[0]\n                            time = result[1]\n                            t2 = Date.now()-time\n                            console.log \"asyncPing result: #{t1} + #{t2} = #{t1 + t2}\"\n                        # Optional function for promise.catch() method\n                        catch: (err) ->\n                            console.error 'asyncPing error:', err\n                    longMethodA:\n                        mode: 'async'\n                        method: ->\n                            console.log 'Long method A started'\n                            []\n                        then: (result) -> console.log 'Long method A result:', result\n                        catch: (err) -> console.error 'Long method A error:', err\n                    longMethodB: ->\n                        console.log 'Long method B started'\n                        [\n                            (result) ->\n                                console.log 'Long method B result:', result\n                        ]\n\n                    # Example use:\n                    # app.api.methods.asyncPing()\n                    #   .then(function(result) {\n                    #       var t1 = result[0], time = result[1], t2 = Date.now()-time;\n                    #       console.log(`asyncPing result: ${t1} + ${t2} = ${t1 + t2}`);\n                    #   }).catch(function(err) { console.error('asyncPing error:', err) })\n\n                    history: ->\n                        [\n                            (channels) ->\n                                app.setHistory channels\n                        ]\n                    'message'\n                    'createChannel'\n                ]\n            send: (data) -> # Function for sending data\n                console.log '==> SEND:', data\n                if app.server is 'ws'\n                    # Send data via WebSockets\n                    if app.ws and app.ws.readyState is 1\n                        app.ws.send data\n                else if app.server is 'local'\n                    # Send data to local server\n                    srv.api.parse data\n                return\n            # coder:\n            #     name: 'Coder'\n            #     arguments: ['example key']\n            key: 'example key'\n            mode: 'sync'    # Methods call mode for all methods whithout async/sync flag\n        )\n\n        srv.init @\n        @connect()\n        @\n\n    connect: ->\n        @api.methods.history()\n        @\n\n    addChannel: (channel, history = []) ->\n        if @channels[channel] then return\n        @channels[channel] = history: history\n        $c = $ \"<div class='channel'>##{channel}</div>\"\n        $c.click (e) => @selectChannel channel\n        @$.channels.append $c\n        @\n\n    setHistory: (channels) ->\n        @$.channels.empty()\n        @channels = {}\n        @selectedChannel = null\n        for own name, c of channels\n            @addChannel name, c.history\n            if @selectedChannel is null\n                @selectChannel name\n        @\n\n    selectChannel: (channel) ->\n        @selectedChannel = channel\n        @$.messages.empty()\n        c = @channels[channel]\n        msgs = []\n        for m in c.history\n            msgs.push @createMessage m.author, m.message\n        @$.messages.html msgs\n        @\n\n    createMessage: (author, message) ->\n        $ \"<div class='message'>[<span class='author'>#{author}</span>]: <span class='text'>#{message}</span></div>\"\n\n    message: (channel, author, message) ->\n        if not @channels[channel]\n            @addChannel channel\n        @channels[channel].history.push(\n            author: author\n            message: message\n        )\n\n        if @selectedChannel is channel\n            @$.messages.append @createMessage author, message\n        @\n\n    wsConnect: ->\n        app = @\n        port = 3001\n        console.log 'Connecting to WebSockets: ', port\n        if @ws\n            @ws.close()\n        @ws = new WS\n            host: 'localhost'\n            port: port\n            open:  (e) ->\n                console.log 'WS Connected to:', port\n                app.connect()\n                return\n            msg:   (e) ->\n                console.log '<== RECEIVE ws:', e.data\n                app.api.parse e.data\n                return\n            error: (e) ->\n                console.error 'WS connection error', e\n                return\n            close: (e) ->\n                delete app.session\n                return\n\n\n\n$ ->\n    srv = window.SRV = new Server\n    window.APP = new App(\n        channels: $ '.channels'\n        messages: $ '.messages'\n        textbox: $ '.textbox'\n        send: $ '.send'\n        nickname: $ '.nickname'\n        channelName: $ '.channelName'\n        createChannel: $ '.createChannel'\n        server: $ '.server'\n        useHttpApi: $ '#useHttpApi'\n    ).init srv\n\n\n\n\n# r = new Reqs(\n\n#     send:\n#         ws: (data) ->\n#         ajax: (data) ->\n# )"
  ]
}