{
  "version": 3,
  "file": "client.js",
  "sourceRoot": "../../..",
  "sources": [
    "examples/ws/node-client/client.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "ws = require 'nodejs-websocket'\nReqs = require '../../../dist/node/index.js'\n\nport = 3001\nhost = 'localhost'\nurl = \"ws://#{host}:#{port}\"\n\napi = new Reqs(\n    events:\n        pong: (t1, time) ->\n            t2 = Date.now()-time\n            console.log \"Event: 'Pong'. Ping #{t1} + #{t2} = #{t1 + t2}\"\n        message: (channel, author, msg) =>\n            # console.log \"New message: <##{channel} [#{author}]: #{msg}>\"\n            app.message channel, author, msg\n        channelCreated: (channel, history) ->\n            app.addChannel channel, history\n    methods:\n        [\n            cbPing: ->\n                [\n                    Date.now()\n                    (t1, time) ->\n                        t2 = Date.now()-time\n                        console.log \"Ping with callback result: ping #{t1} + #{t2} = #{t1 + t2}\"\n                ]\n            syncPing:\n                method: -> [ Date.now() ] # Return array with arguments for method. Return result of 'send' function\n            asyncPing:\n                mode: 'async'\n                method: -> [ Date.now() ] # Return array with arguments for method. Return promise.\n                # Optional function for promise.then() method\n                then: (result) ->\n                    t1 = result[0]\n                    time = result[1]\n                    t2 = Date.now()-time\n                    console.log \"asyncPing result: #{t1} + #{t2} = #{t1 + t2}\"\n                # Optional function for promise.catch() method\n                catch: (err) ->\n                    console.error 'asyncPing error:', err\n            history: ->\n                [\n                    (channels) ->\n                        app.setHistory channels\n                ]\n            'message'\n            'createChannel'\n        ]\n    send: (data) -> # Function for sending data\n        console.log '==> SEND:', data\n        if @conn and @conn.readyState is 1\n            @conn.sendText data\n        return\n\n    session:\n        arguments: 'conn'\n    # coder:\n    #     name: 'Coder'\n    #     arguments: ['example key']\n    key: 'example key'\n    mode: 'sync'    # Methods call mode for all methods whithout async/sync flag\n)\n\nwsc = ws.connect( url, ->\n    console.log \"--- Connected to : #{url} ---\"\n    conn = @\n    # Create new ReqsAPI session\n    conn.session = api.new conn\n\n    # Connection closing log\n    conn.on 'close', (code, reason) ->\n        console.log '--- Connection closed', code, reason\n        delete conn.session\n        return\n\n    # Conection errors handling (necessarily!)\n    conn.on 'error', (err) ->\n        # This error happens when connections lost\n        if err.code is 'ECONNRESET'\n            # console.error('--- Connection close error ECONNRESET');\n        else\n            console.error '--- Connection error: ', err\n        return\n\n    # WS messages processing\n    conn.on 'text', (text) ->\n        console.log '<== Incoming request:', text\n        @session.parse text\n\n    conn.session.methods.cbPing()\n    conn.session.methods.syncPing()\n    conn.session.methods.asyncPing()\n)\n"
  ]
}