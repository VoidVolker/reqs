{
  "version": 3,
  "file": "build.js",
  "sourceRoot": "..",
  "sources": [
    "scripts/build.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "fs = require 'fs'\npath = require 'path'\nbabel = require '@babel/core'\n\nsrcMainFile = 'reqs.js'\nsourcesPath = './src/'\ndistPath = './dist/'\ndistWebPath = \"#{distPath}web/\"\ndistNodePath = \"#{distPath}node/\"\n\nsrcMainPath = \"#{sourcesPath}#{srcMainFile}\"\n\ndistNodeMainPath = \"#{distNodePath}reqs.js\"\ndistWebMainPath = \"#{distWebPath}reqs.js\"\n\ndistMinPath1 = \"#{distWebPath}reqs.min.js\"\ndistMapPath1 = \"#{distWebPath}reqs.min.map\"\n\ndistSrcPath2 = \"#{distWebPath}reqs.es5.js\"\ndistMinPath2 = \"#{distWebPath}reqs.es5.min.js\"\ndistMapPath2 = \"#{distWebPath}reqs.es5.min.map\"\n\nlibDir = 'lib'\n\nbabelMinifi =\n    presets: ['minify']\n    comments: false\n    sourceMaps: true\n    sourceType: 'script'\n\nbabelES5 =\n    presets: [\n        [\n            '@babel/preset-env'\n            useBuiltIns: 'entry'\n            targets: '> 0.25%, not dead'\n            corejs:\n                version: 3\n        ]\n    ]\n    comments: true\n    sourceMaps: true\n    sourceType: 'script'\n\n\nbabelES5Minifi =\n    presets: [\n        [\n            '@babel/preset-env'\n            useBuiltIns: 'entry'\n            targets: '> 0.25%, not dead'\n            corejs:\n                version: 3\n        ]\n        [\n            'minify'\n            builtIns: false\n\n        ]\n    ]\n    comments: false\n    sourceMaps: true\n    sourceType: 'script'\n\n\nbuild = ->\n    reqsSources = fs.readFileSync(srcMainPath).toString()\n\n    libsSources = loadDir sourcesPath, libDir, false\n    protocolsSources = loadDir sourcesPath, 'protocols'\n    codersSources = loadDir sourcesPath, 'coders'\n\n    includesL0 = getIncudes libsSources, '.'\n    includesL1 = getIncudes libsSources, '..'\n\n    distSrcNode = \"#{includesL0}\\n\\n#{reqsSources}\"\n    webSourcesArr = [\n        libsSources.join '\\n'\n        reqsSources\n        # protocolsSources.join '\\n'\n        # codersSources.join '\\n'\n    ]\n    distSrcWeb = moduleWrap 'Reqs', webSourcesArr.join '\\n\\n'\n    # distSrcWeb = moduleWrap 'Reqs', \"#{libsSources.join('\\n')}\\n\\n#{reqsSources}\\n\\n#{protocolsSources.join('\\n')}\\n\\n#{codersSources.join('\\n')}\"\n\n\n    fs.writeFileSync distNodeMainPath, distSrcNode\n    fs.writeFileSync distWebMainPath, distSrcWeb\n\n    babelSaveTo  distSrcWeb, distMinPath1, distMapPath1, babelMinifi       # Default code minification\n    babelSaveTo  distSrcWeb, distSrcPath2, null,         babelES5          # ES5 code confertation\n    babelSaveTo  distSrcWeb, distMinPath2, distMapPath2, babelES5Minifi    # ES5 code minification\n\n    saveModulesForNode sourcesPath, includesL1, 'protocols', 'Protocol'\n    saveModulesForNode sourcesPath, includesL1, 'coders', 'Coder'\n    saveLibsForNode sourcesPath, libDir,\n\nfileWriteCb = (fileName) ->\n    (err) ->\n        if err\n            console.error 'Error while saving file: ', fileName\n            console.error err\n        else\n            console.info 'File saved:', fileName\n\nbabelSaveTo = (source, jsFile, mapFile, options) ->\n    babel.transform(\n        source\n        options\n        (err, result) ->\n            if err\n                return console.error err\n\n            fs.writeFile jsFile, result.code, fileWriteCb jsFile\n            if mapFile?\n                delete result.map.sourcesContent\n                result.map.sources = [ path.basename jsFile ]\n                fs.writeFile mapFile, JSON.stringify(result.map), fileWriteCb mapFile\n            result\n    )\n\nloadDir = (modulePath, moduleName, isWrap = true) ->\n    dirPath = path.join modulePath, moduleName\n    files = fs.readdirSync dirPath, withFileTypes: true\n    sources = []\n    for file in files\n        if file.isFile() and file.name.endsWith '.js'\n            moduleSrc = fs.readFileSync(\"#{dirPath}/#{file.name}\").toString()\n            if isWrap\n                sources.push \"Reqs.addModule((function(module){#{moduleSrc};return module.exports})({}))\"\n            else\n                str = new String moduleSrc\n                str.fileName = file.name\n                str.name =  path.parse(file.name).name\n                # str.name = file.name.split('.')[0]\n                sources.push str\n    sources\n\ngetIncudes = (libs, level) ->\n    includes = ''\n    for lib in libs\n        includes += \"var #{lib.name} = require('#{level}/#{libDir}/#{lib.name}')\\n\"\n    includes\n\nsaveModulesForNode = (modulePath, includes, moduleName, constructorName) ->\n    sources = loadDir modulePath, moduleName, false\n    # constructorPath = \"../#{libDir}/#{constructorName}\"\n    for src in sources\n        filePath = \"#{distNodePath}#{moduleName}/#{src.fileName}\"\n        # fileSources = \"var #{constructorName} = require('#{constructorPath}')\\n\\n#{src}\"\n        fileSources = \"#{includes}\\n\\n#{src}\"\n        fs.writeFile filePath, fileSources, fileWriteCb filePath\n    return\n\nsaveLibsForNode = (modulePath, moduleName) ->\n    sources = loadDir modulePath, moduleName, false\n    for src in sources\n        filePath = \"#{distNodePath}#{libDir}/#{src.fileName}\"\n        # filePath = \"#{distNodePath}#{libDir}/#{src.fileName}\"\n        inc = ''\n        if src.name isnt 'Tools'\n            inc = \"Tools = require('./Tools')\\n\\n\"\n        fileSources = \"#{inc}#{src}\\n\\nmodule.exports = #{src.name}\\n\"\n        fs.writeFile filePath, fileSources, fileWriteCb filePath\n    return\n\nmoduleWrap = (moduleName, data) ->\n    \"this.#{moduleName}=(function(module){#{data};return module.exports})(this.module||{})\"\n\nbuild()"
  ]
}