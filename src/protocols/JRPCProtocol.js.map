{
  "version": 3,
  "file": "JRPCProtocol.js",
  "sourceRoot": "../..",
  "sources": [
    "src/protocols/JRPCProtocol.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "class JRPCRequest\n    constructor: (id) ->\n        if id then @id = id\n        @jsonrpc = '2.0'\n\nclass JRPCMethod extends JRPCRequest\n    constructor: (@method, id, @params = [], cbs) ->\n        super id\n        if cbs then @cbs = cbs\n\n\nclass JRPCCallback extends JRPCRequest\n    constructor: (@id, @params = [], cbs) ->\n        super id\n        if cbs then @cbs = cbs\n\nclass JRPCError extends JRPCRequest\n    constructor: (code, message, id) ->\n        super id\n        # @result = null\n        @error = code: code, message: message\n\nclass JRPCInfo extends JRPCRequest\n    constructor: (@id, server, client) ->\n        super id\n        if server then @server = server\n        if client then @client = client\n\n\nclass JRPCProtocol extends Protocol\n\n    Method:     JRPCMethod\n    Callback:   JRPCCallback\n    Error:      JRPCError\n    Info:       JRPCInfo\n\n    # Response processing\n    constructor: ->\n        super()\n        methodsInfo =\n            type: 'Array'\n            value:\n                type: ['Object', 'String']\n                props:\n                    name: Model.required 'String'\n                    info: Model.required 'String'\n                    args:\n                        type: 'Array'\n                        value:\n                            type: 'Object'\n                            props:\n                                name: Model.required 'String'\n                                type: Model.required 'String'\n                                info: Model.required 'String'\n                    ret: 'String'\n\n        @model =\n            method: new Model @,\n                method: Model.required 'String'\n                params: Model.required 'Array'\n                id: 'String'\n                cbs: 'Array'\n            callback: new Model @,\n                result: Model.required 'Array'\n                id: 'String'\n                cbs: 'Array'\n            error: new Model @,\n                error:\n                    type: Model.required 'Object'\n                    props:\n                        code: Model.required 'Number'\n                        message: Model.required 'String'\n                id: 'String'\n            info: new Model @,\n                id: Model.required 'String'\n                server: methodsInfo\n                client: methodsInfo\n\n    # Response processing\n    parse: (request) ->\n        super()\n\n        id = if request.id then request.id.toString() else null\n\n        if request.method\n            @model.method.validate @, request\n            new Protocol.Method request.method, id, request.params, request.cbs\n\n        else if request.error\n            @model.error.validate @, request\n            new Protocol.Error err.message, err.code, id\n\n        else if request.result\n            @model.callback.validate @, request\n            new Protocol.Callback id, request.result, request.cbs\n\n        # Reqs custom property (?)\n        else if request.info\n            @model.info.validate @, request\n            new Protocol.Info id, request.server, request.client\n\n        else\n            @throw \"Unknown request: '#{JSON.stringify(request)}'\"\n\nmodule.exports = JRPCProtocol\n"
  ]
}